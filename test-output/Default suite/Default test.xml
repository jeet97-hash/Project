<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="AISHWARYA" ignored="0" name="Default test" tests="11" failures="0" timestamp="07 Jun 2020 16:10:40 GMT" time="60.484" errors="0">
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshot" time="0.099" classname="com.project.testCases.GroupBasedTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.project.utilities.WriteExcelSheet.writeFile(WriteExcelSheet.java:30)
at com.project.testCases.GroupBasedTest.updateTestCaseStatusAndTakeScreenshot(GroupBasedTest.java:130)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshot -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshot" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshot -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshot" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshot -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshot" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshot -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshot" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshot -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshot" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshot -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshot" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshot -->
  <testcase name="@AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterMethod updateTestCaseStatusAndTakeScreenshotRegressionTest -->
  <testcase name="@AfterClass displayCollectionAndFlushReport" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterClass displayCollectionAndFlushReport -->
  <testcase name="@AfterClass flushReport" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- @AfterClass flushReport -->
  <testcase name="openURL" time="5.661" classname="com.project.testCases.GroupBasedTest"/>
  <testcase name="loginSite" time="15.211" classname="com.project.testCases.GroupBasedTest"/>
  <testcase name="checkGiftCard" time="11.015" classname="com.project.testCases.GroupBasedTest"/>
  <testcase name="giftPageOperation" time="18.292" classname="com.project.testCases.GroupBasedTest"/>
  <testcase name="searchProduct" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- searchProduct -->
  <testcase name="advanceSearch" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- advanceSearch -->
  <testcase name="selectCategory" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- selectCategory -->
  <testcase name="selectStorage" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- selectStorage -->
  <testcase name="selectExcludeOutOfStock" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- selectExcludeOutOfStock -->
  <testcase name="selectSortBy" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- selectSortBy -->
  <testcase name="logOutSite" time="0.0" classname="com.project.testCases.GroupBasedTest">
    <skipped/>
  </testcase> <!-- logOutSite -->
</testsuite> <!-- Default test -->
